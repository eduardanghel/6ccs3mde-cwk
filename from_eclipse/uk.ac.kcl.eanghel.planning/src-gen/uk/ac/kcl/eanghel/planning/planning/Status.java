/**
 * generated by Xtext 2.24.0
 */
package uk.ac.kcl.eanghel.planning.planning;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import org.eclipse.emf.common.util.Enumerator;

/**
 * <!-- begin-user-doc -->
 * A representation of the literals of the enumeration '<em><b>Status</b></em>',
 * and utility methods for working with them.
 * <!-- end-user-doc -->
 * @see uk.ac.kcl.eanghel.planning.planning.PlanningPackage#getStatus()
 * @model
 * @generated
 */
public enum Status implements Enumerator
{
  /**
   * The '<em><b>STUCK</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #STUCK_VALUE
   * @generated
   * @ordered
   */
  STUCK(0, "STUCK", "Stuck"),

  /**
   * The '<em><b>PROGRESS</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #PROGRESS_VALUE
   * @generated
   * @ordered
   */
  PROGRESS(1, "PROGRESS", "In Progress"),

  /**
   * The '<em><b>DONE</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #DONE_VALUE
   * @generated
   * @ordered
   */
  DONE(2, "DONE", "Done"),

  /**
   * The '<em><b>REVIEW</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #REVIEW_VALUE
   * @generated
   * @ordered
   */
  REVIEW(3, "REVIEW", "Waiting for review");

  /**
   * The '<em><b>STUCK</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #STUCK
   * @model literal="Stuck"
   * @generated
   * @ordered
   */
  public static final int STUCK_VALUE = 0;

  /**
   * The '<em><b>PROGRESS</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #PROGRESS
   * @model literal="In Progress"
   * @generated
   * @ordered
   */
  public static final int PROGRESS_VALUE = 1;

  /**
   * The '<em><b>DONE</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #DONE
   * @model literal="Done"
   * @generated
   * @ordered
   */
  public static final int DONE_VALUE = 2;

  /**
   * The '<em><b>REVIEW</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #REVIEW
   * @model literal="Waiting for review"
   * @generated
   * @ordered
   */
  public static final int REVIEW_VALUE = 3;

  /**
   * An array of all the '<em><b>Status</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static final Status[] VALUES_ARRAY =
    new Status[]
    {
      STUCK,
      PROGRESS,
      DONE,
      REVIEW,
    };

  /**
   * A public read-only list of all the '<em><b>Status</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final List<Status> VALUES = Collections.unmodifiableList(Arrays.asList(VALUES_ARRAY));

  /**
   * Returns the '<em><b>Status</b></em>' literal with the specified literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param literal the literal.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static Status get(String literal)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      Status result = VALUES_ARRAY[i];
      if (result.toString().equals(literal))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>Status</b></em>' literal with the specified name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param name the name.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static Status getByName(String name)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      Status result = VALUES_ARRAY[i];
      if (result.getName().equals(name))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>Status</b></em>' literal with the specified integer value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the integer value.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static Status get(int value)
  {
    switch (value)
    {
      case STUCK_VALUE: return STUCK;
      case PROGRESS_VALUE: return PROGRESS;
      case DONE_VALUE: return DONE;
      case REVIEW_VALUE: return REVIEW;
    }
    return null;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final int value;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String name;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String literal;

  /**
   * Only this class can construct instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private Status(int value, String name, String literal)
  {
    this.value = value;
    this.name = name;
    this.literal = literal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getValue()
  {
    return value;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getLiteral()
  {
    return literal;
  }

  /**
   * Returns the literal value of the enumerator, which is its string representation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    return literal;
  }
  
} //Status
