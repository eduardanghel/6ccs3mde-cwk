/* XPECT_SETUP uk.ac.kcl.eanghel.planning.xpect.XpectTests END_SETUP */

/*
XPECT generated file TestTeamPlanning.txt--- 
Planning session for team TestTeam.
Team stakeholders: 
	TestOwner,

Tasks planned in the session: 

0. Test the 'Planning MDE': 
	 owned by TestOwner
	 worth 8 Story Points.
	 status: In Progress.
	 defined in the project TestProject.
---

XPECT generated file TestTeamPlanning.html---
<!doctype html>
<html lang="en">
<!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-eOJMYsd53ii+scO/bJGFsiCZc+5NDVN2yr8+0RDqr0Ql0h+rP48ckxlpbzKgwra6" crossorigin="anonymous">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/js/bootstrap.bundle.min.js" integrity="sha384-JEW9xMcG8R+pH31jmWH6WWP0WintQrMb4s7ZOdauHnUtxwoG2vI5DkLtS3qm9Ekf" crossorigin="anonymous"></script>
<meta name="viewport" content="width=device-width, initial-scale=1">
<title>Team planning for TestTeam</title>
<script src="https://www.kryogenix.org/code/browser/sorttable/sorttable.js"></script>
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>

<script type="text/javascript">
  google.charts.load('current', {'packages':['corechart']});
  google.charts.setOnLoadCallback(drawChart);

  function drawChart() {

    var data = google.visualization.arrayToDataTable([
      ['Status', 'Number of Tasks'],
      ['Stuck',     0],
      ['In Progress',      1],
      ['Done',  0],
      ['Waiting for review', 0]
    ]);

    var options = {
      title: 'Status Chart'
    };

    var chart = new google.visualization.PieChart(document.getElementById('piechart'));

    chart.draw(data, options);
  }
</script>
<script>
function downloadCSV(csv) {
    let csvFile = new Blob([csv], {type: "text/csv"});
	let downloadLink = document.createElement("a");
    downloadLink.download = 'planning.csv';
    downloadLink.href = window.URL.createObjectURL(csvFile);
    downloadLink.style.display = "none";
    document.body.appendChild(downloadLink);
    downloadLink.click();
}
</script>

<script>
	function exportTableToCSV() {
	    var csv = [];
	    var elem = document.getElementById("table01")
	    
	    var rows = elem.getElementsByTagName("tr")
	    
	    for (var i = 0; i < rows.length; i++) {
	        var row = [], cols = rows[i].querySelectorAll("td, th");
	        
	        for (var j = 0; j < cols.length; j++) {
	        	row.push('"' + cols[j].innerText + '"');
	        }
	        
	        csv.push(row.join(","));        
	    }
	    downloadCSV(csv.join("\n"));
	}
</script>
</head>


<body>
<div class="container">

<h1>Team TestTeam planning.</h1>
<p></p>
<p>The table can be sorted by clicking on any header.</p>
<p>You can download a CSV by clicking the button below.</p>
<p></p>
<table class="table table-striped table-hover sortable" id="table01">
<tr>
<th>ID</th>
<th>Owners</th>
<th>Task</th>
<th>Priority</th>
<th>Story Points</th>
<th>Status</th>
<th>Projects</th>
<tr>
<tr>
<td>0</td>
<td> TestOwner 
</td>
<td>Test the 'Planning MDE'.
</td>
<td>10</td>
<td>8</td>
<td>In Progress</td>
<td>TestProject
</td>
</tr>
</table>
<button onclick="exportTableToCSV()">Save as CSV</button>
<div id="piechart" style="width: 900px; height: 500px; "></div>
<div id="columnchart_material" style="width: 900px; height: 500px;"></div>
</body>
</div>
</html>
---
   
   
 */

Team TestTeam
Owners TestOwner
Projects TestProject
Task
	Test "Planning MDE"
	owner TestOwner
	priority 10
	points 8
	status In Progress
	project TestProject